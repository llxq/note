-> Git
    -> Git安装
        -> Window 安装
            -> http://git-scm.com/download/win 下载 GIt客户端软禁
        -> Linux 安装
            -> centOs发行版：sudo yum install git
            -> Ubuntu发行版：sudo apt-get install git
        -> Mac安装
            -> 打开 Terminal 直接输入 git命令，会自动提示，按提示引导安装即可

    -> Git工作原理
        -> Git管理我们的文件的时候，有3种状态，分别是：已提交 (committed)、已修改 (modified) 和 已暂存 (staged)，由此引入 Git项目的三个工作区域的概念：Git仓库、工作目录 以及 暂存区域
            -> Git仓库目录是Gti用来保存项目的元数据和对象数据库的地方。这是Git中最重要的部分，从其他计算机克隆仓库时，拷贝的就是这里的数据。
            -> 工作目录是对项目的某个版本独立提取出来的内容。这些从Git仓库的压缩数据中提取出来的文件，放在磁盘上供你使用或修改
            -> 工作区就是我们编辑文件的区域，暂存区就是我们将修改了的我那件先放在暂存区，最后将暂存区的文件一起放入到git仓库

    -> 要使用 git 来管理我们代码，首先获得一个仓库，进入根目录，执行 git init 这
    样就创建了一个 .git目录(仓库)

    -> 当我们需要往仓库添加东西的时候，我们需要一个身份，这个时候就需要配置用户信息了
        -> git config --global user.name '需要添加的名字'
        -> git config --global user.email 需要添加的邮箱
        -> 一天电脑只需要配置一次

    -> git init：初始化了一个空的仓库放在当前目录，这个时候，在当前目录会出现一个隐藏文件 .git
    -> git add 文件名：将文件放在暂存区
       -> git add *  或者 git add -A 
    -> git commit -m 别名(就是标记，或者说是备注信息) 
        -> 将所有暂存区所有文件全部放到 git仓库
        -> 如果提交的时候不加上 -m 和备注信息的话，会进入到一个类似于 vi编辑器的界面，这个时候我们在编辑页面的顶部加上备注信息即可
        -> 每次保存会自动生成一个版本(commit编码)，可以通过 commit还原到某个版本
            -> 这个编码是不会重复的
    -> git log  (查看当前版本/存盘点/历史)
        -> 就是查看历史
    -> git reset --hard commit版本编码
        -> 将文件恢复到指定版本
    -> git checkout 文件名
        -> 当写的代码有误的时候，我们可以用这个将文件回到上一次保存时的状态，
        -> git checkout 分支名：切换到某一个分支
    
    -> 查看自己的配置信息
        -> git config --list
    -> 查看日志
        -> git log

    -> 查看当前文件夹的状态
        -> git status
        -> 该命令会自动忽略空文件夹

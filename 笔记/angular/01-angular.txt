-> Angular 简介 (简称：ng)
    -> Angular是一款非常优秀的前端高级js框架
    -> 有了这一类框架就可以轻松构建 SPA应用程序
        -> SPA：单一页面应用程序
            -> 只有一个页面 (整个应用的一个载体)
            -> 内容全部是由 Ajax方法 呈现出来的
    -> 通过指令扩展了 HTML，通过表达式绑定数据到 HTML上 
    -> 框架就是多个类库的集合

-> hashchange事件
    -> 当使用浏览器访问锚点的时候，锚点的值改变的时候触发该事件

-> Location中的属性
    -> hash：锚点的值 (#后面的值)
    -> search：？后面的值 (包括 ?)
    -> hostname：就是网址 (www.baidu.com)
    -> host：网址，但是包括端口号 (www.baidu.com:8080) 
    -> port：端口号
    -> pathname：请求的页面路径
    -> protocol：协议



-> AngularJs是一个 MVC框架
-> AngularJs是模块化来开发的
-> MVC是以模块化来开发的
    -> 每一个 模块下有 mvc


-> 但我们引入了 angularjs之后，他会给我们提供一个全局对象 angular，在这个对象下面有很多方法，
-> 其中 module方法 可以帮我们创建一个模块，返回模块对象，在这个对象下有 很多方法可以帮我们实现很多业务逻辑
    -> var app = angular.module('创建的模块的名字'，'依赖的模块项');
    -> 使用这个对象创建一个控制器
    -> app.controller('控制器名称'，['$scope', function ($scope) {
        $scope      // 该 $scope 是一个空对象，此对象就是我们的 module  (M层)
                    // 可以在该对象下 挂载数据
    }])

-> 使用angular的时候需要一个容器，给该容器添加一个 ng-app属性，属性的值填写的就是需要加载的模块的名字，该指令则是告诉浏览器下面使用的是 angularjs，一个html页面最好使用一个 ng-app，不能嵌套
    -> 在再下面建立一个容器，当做控制器，在给控制器添加一个 ng-controller属性，属性的值填写的就是 当前模块的 controller方法 中的控制器名称
        -> 在下面就是 view层了，使用 {{ 在module层挂载的属性 }} 来访问

-> ng-repeat = key in 需要遍历的对象 // 遍历指令
    -> 或者这样写 ng-repeat = (key, value) in 需要遍历的对象
    -> 这种遍历操作都会 自动创建 相同数量的 dom元素



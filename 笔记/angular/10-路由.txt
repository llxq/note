-> 路由
    -> 一个应用是由若干个视图组合而成的，根据不用的业务逻辑展示给用户不同的视图，路由则是实现这一功能的关键

    -> SPA
        -> SPA(Single Page Application) 指的是通过单一页面展示所有功能，通过 Ajax 动态获取数据进行实时渲染，结合CSS3动画模仿原生 APP 交互，然后再进行打包(使用工具把Web应用包一个壳，这个壳本质上是浏览器) 变成一个 '原生' 应用
        -> 在PC端也有广泛的应用，通常情况下使用 Ajax 异步请求数据，然后实现内容局部刷新，局部刷新的本质是动态生成 DOM，新生成的 DOM 元素并没有真实存在与文档中，所以当再次刷新页面时新添加的DOM元素会 '丢失'，通过单页面可以很好的解决这个问题


    -> 路由
        -> 在后端开发中通过 URL 地址可以实现页面(视图)的切换，但是 AngularJS 是一个纯前端MVC框架，在开发单页面应用时，所有功能都在同一页面完成，所以无需切换 URL 地址(即不允许产生跳转)，但Web应用中又经常通过连接(a标签)来更新页面(视图)，当点击链接时还要阻止其向服务器发起请求，通过锚点(业内跳转) 可以实现这一点
            -> 实现单页面应用需要具备：
                -> 只有一页面
                -> 连接使用锚点

    -> 使用路由
        -> 引入 angular-route.js 文件，并且该文件必须在 angular.js文件之后引入
            -> angular-route.js就相当于是插件
        -> 需要在创建 module的时候添加依赖 ngRouter依赖
            -> const App = angular.module('App', ['ngRouter']);
        -> 需要对路由模块进行配置，使其正常工作


        -> template：字符串形式的视图模板
        -> templateURL：引入外部视图模板
        -> controller：视图模板所属的控制器
        -> redirect：跳转到其他路由
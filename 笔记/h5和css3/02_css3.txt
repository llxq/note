-> 变形：transform	迅速变形
-> 过渡：transition	缓慢变化
-> 动画：animation	关键侦动画

-> 转换：
	-> 转换是使元素改变形状、尺寸和位置的一种效果
	-> 又称为变形,即,可以向元素应用2D或3D转换,从而对元素进行旋转、缩放、移动或倾斜
	-> 2D转换：使元素在X轴和Y轴平面上发生变化,改变其形状、尺寸和位置
	-> 3D转换：元素还可以在Z轴上发生变化
	-> 转换属性：
		-> transform属性向元素应用2D或3D转换
		-> 指定一组转换函数,取值
			-> transform：none/transform-function;
				-> none：默认值,表示元素不进行转换
				-> transform-function：表示一个或多个转换函数,中间使用空格分开
	-> 转换的原点：
		-> transform-origin：属性用来指定元素的转换原点位置
			-> 默认情况下,转换的原点在元素的中心点
			-> 或者是X轴和Y轴的50%处
				-> 当前物体的左上点为 0,0
		-> transform-origin：数值(x,y)/百分比(宽,高)/关键字
			-> 一个值：表示所有轴的位置
			-> 两个值：表示X轴和Y轴
			-> 三个值：表示X轴、Y轴和Z轴
	-> 变形：2D
		-> 旋转：rotate();
			-> 围绕一个参照原点(transform-origin),旋转指定角度,默认为顺时针
			-> 语法：transform:rotate(ndeg)
				-> n为正,顺时针旋转
				-> n为负,逆时针旋转
			-> 注意：rotate在旋转的过程中,不但能够旋转元素,同时能够旋转绘图的坐标系
					 方向。如果配合着其他的变形一起来做的话,rotate在前的话,会影响之
					 后延坐标轴的其他变形
			-> 解决方案：如果配合rotate一起来做变形,最好将rotate放在最后一个函数上
		-> 位移：translate();
			-> 沿坐标方向 移动指定距离
			-> 语法：transform:translate(X轴移动坐标,Y轴移动坐标);
			-> 注意：位移不会影响其他元素位置,但可能会盖住周围的元素
			-> 单方向位移：
				-> transform:translateX(距离);
				-> transform:translateY(距离);
		-> 缩放：scale();
			-> 将指定坐标轴上的坐标缩放指定的倍数
			-> 语法：transform:scale(倍数)
				-> 倍数：0~1：缩小
						 >1：放大
				-> scale(倍数)：表示等比缩放
			-> 单当先缩放：
				-> scaleX(倍数);
				-> scaleY(倍数);
		-> 倾斜：skew();
			-> 沿着坐标轴方向倾斜指定角度
			-> 语法：
				-> transform:skew(ndeg);	仅沿X轴倾斜
			    -> skew(ndeg,ndeg);	沿着X轴和Y轴同时倾斜
			-> 单方向倾斜：
				-> skewX(ndeg);
				-> skewY(ndeg);
			-> 注意：
				-> X轴方向：角度为正,向左倒
							角度为负,向右倒
				-> Y轴方向：角度为正,向上倾斜
							角度为负,向下倾斜
							
	-> 3D变形
		-> 元素,要从立体角度观察
		-> 坐标轴：X轴、Y轴、Z轴
		-> 属性：(取值为数值)
			-> perspective：设定假定的人眼位置到投影平面的距离
			-> 如何使用：设置在父元素上,值越大表示离屏幕越远
			-> 设置perspective仅仅只是视觉呈现出3D效果,并不是真正的3D
			-> 浏览器兼容问题：
				-> 加前缀：-webkit-perspective
		-> 位移：
			-> translate(x,y,z);
			-> translate3d(x,y,z);
			-> 可以改变元素在Z轴上的位置
		-> 旋转：
			-> rotateZ(ndeg);
		-> 缩放:
			-> scaleZ(距离);